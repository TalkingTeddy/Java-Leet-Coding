// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// The main issue I was running into was I didn't understand how fibonnacis worked. I was assigning arrays, linkedlists, arrayslists and everything. I needed to google and stuff in order to wrap my head around simple logic.

// I was running into an issue that I was comparing i with fourMillion rather than taking into account how fast the compunding fibonnaci grows.

// Then I ran into issue that I couldn't exit the loop because I was writing the loop outside rather than breaking from inside.
public class Fibonnaci {
    public static void main(String[] args) {
        int n1 = 1;
        int n2 = 2;
        int n3;
        int sum = 0;
        int fourMillion = 4000000;


            for(int i = 2; i < 100; i++){
                n3 = n1 + n2;
                System.out.println(n3);
                n1 = n2;
                n2 = n3;

                if ((n3 % 2) == 0){
                    sum += n3;
                }
                if(n3 > fourMillion){
                    break;
                }
            }
// Since we are starting from 2 itself this number doesn't get added into the sum hence we are adding it separately.
        sum += 2;
        System.out.println(sum);
    }
}
